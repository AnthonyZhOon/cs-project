name: Deploy PR to Preview Environment?

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  pull-requests: write # Add PR comments

env:
  NODE_VERSION: 22
  PNPM_VERSION: 10

jobs:
  setup-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Vercel CLI
        run: pnpm add --global vercel@latest

      - name: Deploy to Vercel
        id: deploy
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          vercel pull --yes --environment=production --token=${{ env.VERCEL_TOKEN }}
          vercel env pull .env --token=${{ env.VERCEL_TOKEN }}
          vercel build --prod --token=${{ env.VERCEL_TOKEN }}
          DEPLOY_URL=$(vercel deploy --prebuilt --prod --token=${{ env.VERCEL_TOKEN }})
          echo "deploy_url=$DEPLOY_URL" >> $GITHUB_OUTPUT
          echo "Preview URL: $DEPLOY_URL"

      - name: Comment PR with deployment URL
        uses: actions/github-script@v6
        env:
          URL: ${{ steps.deploy.outputs.deploy_url }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            body: `ðŸš€ Preview deployment is ready! Visit: ${{ steps.deploy.outputs.deploy_url }}`
            });
