datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model User {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique
  name  String

  assignedTaskIds   String[]          @db.ObjectId
  assignedTasks     Task[]            @relation(fields: [assignedTaskIds], references: [id])
  attendingEventIds String[]          @db.ObjectId
  attendingEvents   Event[]           @relation(fields: [attendingEventIds], references: [id])
  ownedWorkspaces   Workspace[]
  workspaceMembers  WorkspaceMember[]
}

model Task {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  completed   Boolean   @default(false)
  deadline    DateTime?
  priority    Priority?
  tags        String[]  @default([])

  workspaceId String    @db.ObjectId
  workspace   Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)

  assigneeIds String[] @db.ObjectId
  assignees   User[]   @relation(fields: [assigneeIds], references: [id])
}

model Event {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  start       DateTime
  end         DateTime
  tags        String[] @default([])

  workspaceId String    @db.ObjectId
  workspace   Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)

  attendeeIds String[] @db.ObjectId
  attendees   User[]   @relation(fields: [attendeeIds], references: [id])
}

model Workspace {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String

  ownerId String            @db.ObjectId
  owner   User              @relation(fields: [ownerId], references: [id])
  members WorkspaceMember[]

  tasks  Task[]
  events Event[]
}

model WorkspaceMember {
  id   String              @id @default(auto()) @map("_id") @db.ObjectId
  role WorkspaceMemberRole

  userId      String    @db.ObjectId
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  workspaceId String    @db.ObjectId
  workspace   Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum WorkspaceMemberRole {
  MANAGER
  MEMBER
  INVITED
}
